'''
1. 버블 정렬(Bubble Sort)
    인접한 두 원소를 비교하여 정렬하는 알고리즘 중 하나로,
    가장 간단한 정렬 알고리즘 중 하나이다.

- 최악의 경우 시간 복잡도: O(n^2)
- 최선의 경우 시간 복잡도: O(n)
- 평균 시간 복잡도: O(n^2)
'''

# 버블 정렬 알고리즘을 구현하는 함수
def bubble_sort(arr):
    # 배열의 길이를 구합니다.
    n = len(arr)

    # 배열의 길이만큼 반복합니다. i는 현재 정렬할 원소의 인덱스입니다.
    for i in range(n):
        # n-i-1까지 반복합니다. 이는 버블 정렬이 뒤에서부터 정렬이 완료되기 때문에
        # 이미 정렬된 뒷부분은 다시 검사할 필요가 없기 때문입니다.
        for j in range(n - i - 1):
            # 현재 원소(arr[j])가 다음 원소(arr[j+1])보다 크면 두 원소를 교환합니다.
            if arr[j] > arr[j + 1]:
                tmp = arr[j]  # 임시 변수에 현재 원소를 저장합니다.
                arr[j] = arr[j + 1]  # 현재 원소를 다음 원소로 교환합니다.
                arr[j + 1] = tmp  # 다음 원소를 임시 변수에 저장된 원소로 교환합니다.

    # 정렬이 완료된 배열을 반환합니다.
    return arr


arr = [6, 5, 3, 1, 8, 7, 2, 4]
print(bubble_sort(arr))



